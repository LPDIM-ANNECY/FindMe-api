buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
    }
}

apply plugin: 'kotlin'
apply plugin: 'application'

group 'fr.find-me-api'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"

apply plugin: 'com.github.johnrengelman.shadow'

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    //Implementation
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation("io.ktor:ktor-jackson:$ktor_version")

    //Exposed
    implementation "org.jetbrains.exposed:exposed-core:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-dao:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-jdbc:$exposedVersion"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposedVersion"

    compile("org.postgresql:postgresql:42.2.2")

    //Test implementation
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
}

// tell the jar which class to startup in.
jar {
    zip64 = true
    manifest {
        attributes 'Main-Class': "$mainClassName"
    }
}

shadowJar {
    baseName = 'findme-server'
    classifier = null
    version = null
}